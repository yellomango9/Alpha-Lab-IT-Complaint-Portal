# Generated by Django 4.2.23 on 2025-07-25 06:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('complaints', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeedbackTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('questions', models.JSONField(default=list, help_text='List of questions for this feedback template')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Feedback Template',
                'verbose_name_plural': 'Feedback Templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(help_text='Rating from 1 (Poor) to 5 (Excellent)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, help_text='Optional comments about the resolution', max_length=1000)),
                ('resolution_quality', models.PositiveSmallIntegerField(blank=True, help_text='How satisfied are you with the resolution quality?', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('response_time', models.PositiveSmallIntegerField(blank=True, help_text='How satisfied are you with the response time?', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('staff_helpfulness', models.PositiveSmallIntegerField(blank=True, help_text='How helpful was the IT staff?', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('would_recommend', models.BooleanField(blank=True, help_text='Would you recommend our IT support to others?', null=True)),
                ('suggestions', models.TextField(blank=True, help_text='Any suggestions for improvement?', max_length=500)),
                ('is_anonymous', models.BooleanField(default=False, help_text='Keep this feedback anonymous')),
                ('is_public', models.BooleanField(default=False, help_text='Allow this feedback to be displayed publicly')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('complaint', models.OneToOneField(help_text='The complaint this feedback is for', on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='complaints.complaint')),
                ('user', models.ForeignKey(help_text='User who submitted the feedback', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
                'ordering': ['-submitted_at'],
            },
        ),
    ]
